/* Generated by GvGen v.1.0 (https://www.github.com/stricaud/gvgen) */

digraph G {
compound=true;
   node1 [label="# 0x0
PUSHX Data
PUSHX Data
MSTORE
PUSHX LogicData
CALLDATASIZE
LT
PUSHX Data
JUMPI
"];
   node2 [label="# 0xd
PUSHX Data
CALLDATALOAD
PUSHX BitData
SHR
PUSHX LogicData
EQ
PUSHX Data
JUMPI
"];
   node3 [label="# 0x1e
PUSHX Data
JUMP
"];
   node4 [label="# 0x22
JUMPDEST
CALLDATASIZE
PUSHX Data
JUMPI
"];
   node5 [label="# 0x28
STOP
"];
   node6 [label="# 0x29
JUMPDEST
PUSHX Data
CALLDATASIZE
PUSHX Data
PUSHX Data
PUSHX BitData
PUSHX ArithData
PUSHX BitData
PUSHX BitData
SHL
SUB
AND
PUSHX MemData
MLOAD
PUSHX Data
PUSHX Data
JUMP
"];
   node7 [label="# 0x5f
JUMPDEST
PUSHX Data
PUSHX MemData
MLOAD
SUB
GAS
DELEGATECALL
RETURNDATASIZE
PUSHX LogicData
EQ
PUSHX Data
JUMPI
"];
   node8 [label="# 0x79
PUSHX MemData
MLOAD
PUSHX BitData
NOT
PUSHX ArithData
RETURNDATASIZE
ADD
AND
ADD
PUSHX Data
MSTORE
RETURNDATASIZE
MSTORE
RETURNDATASIZE
PUSHX Data
PUSHX ArithData
ADD
RETURNDATACOPY
PUSHX Data
JUMP
"];
   node9 [label="# 0x9a
JUMPDEST
PUSHX Data
"];
   node10 [label="# 0x9f
JUMPDEST
PUSHX Data
JUMPI
"];
   node11 [label="# 0xaa
PUSHX MemData
MLOAD
PUSHX BitData
PUSHX BitData
SHL
MSTORE
PUSHX Data
PUSHX ArithData
ADD
MSTORE
PUSHX Data
PUSHX ArithData
ADD
MSTORE
PUSHX BitData
PUSHX BitData
SHL
PUSHX ArithData
ADD
MSTORE
PUSHX ArithData
ADD
PUSHX MemData
MLOAD
SUB
REVERT
"];
   node12 [label="# 0xe3
JUMPDEST
MLOAD
PUSHX ArithData
ADD
RETURN
"];
   node13 [label="# 0xf0
JUMPDEST
CALLVALUE
ISZERO
PUSHX Data
JUMPI
"];
   node14 [label="# 0xf8
PUSHX Data
REVERT
"];
   node15 [label="# 0xfc
JUMPDEST
PUSHX StorData
SLOAD
PUSHX Data
PUSHX ArithData
PUSHX BitData
PUSHX BitData
SHL
SUB
AND
JUMP
"];
   node16 [label="# 0x110
JUMPDEST
PUSHX MemData
MLOAD
PUSHX ArithData
PUSHX BitData
PUSHX BitData
SHL
SUB
AND
MSTORE
PUSHX ArithData
ADD
PUSHX MemData
MLOAD
SUB
RETURN
"];
   node17 [label="# 0x12c
JUMPDEST
CALLDATACOPY
PUSHX Data
ADD
MSTORE
JUMP
"];
   node18 [label="# 0x13c
INVALID
"];
   node19 [label="# 0x13d
LOGX
PUSHX Data
INVALID
"];
   node20 [label="# 0x145
SLT
SHA3
SMOD
INVALID
"];
   node21 [label="# 0x14a
INVALID
"];
   node22 [label="# 0x14b
INVALID
"];
   node23 [label="# 0x14c
SHL
INVALID
"];
   node24 [label="# 0x14e
PUSHX Data
ADDRESS
INVALID
"];
   node25 [label="# 0x152
INVALID
"];
   node26 [label="# 0x153
AND
INVALID
"];
   node27 [label="# 0x155
CODECOPY
INVALID
"];
   node28 [label="# 0x157
INVALID
"];
   node29 [label="# 0x159
INVALID
"];
   node30 [label="# 0x15a
INVALID
"];
   node31 [label="# 0x15b
INVALID
"];
   node32 [label="# 0x15c
PUSHX Data
INVALID
"];
   node33 [label="# 0x166
INVALID
"];
   node34 [label="# 0x167
PUSHX Data
INVALID
"];
   node35 [label="# 0x16e
INVALID
"];
   node36 [label="# 0x16f
SLT
CODECOPY
NOT
"];
node1->node4;
node1->node2;
node2->node13;
node2->node3;
node3->node6;
node4->node6;
node4->node5;
node6->node17;
node7->node9;
node7->node8;
node8->node10;
node9->node10;
node10->node12;
node10->node11;
node13->node15;
node13->node14;
node15->node16;
node17->node7;
}
