/* Generated by GvGen v.1.0 (https://www.github.com/stricaud/gvgen) */

digraph G {
compound=true;
   node1 [label="# 0x0
PUSHX Data
PUSHX Data
MSTORE
CALLDATASIZE
PUSHX Data
JUMPI
"];
   node2 [label="# 0xa
PUSHX Data
PUSHX Data
JUMP
"];
   node3 [label="# 0x11
JUMPDEST
STOP
"];
   node4 [label="# 0x13
JUMPDEST
PUSHX Data
"];
   node5 [label="# 0x17
JUMPDEST
PUSHX Data
PUSHX StorData
SLOAD
PUSHX ArithData
PUSHX BitData
PUSHX BitData
SHL
SUB
AND
PUSHX Data
JUMP
"];
   node6 [label="# 0x4a
JUMPDEST
JUMP
"];
   node7 [label="# 0x4c
JUMPDEST
PUSHX ArithData
PUSHX BitData
PUSHX BitData
SHL
SUB
AND
EXTCODESIZE
ISZERO
ISZERO
JUMP
"];
   node8 [label="# 0x5b
JUMPDEST
JUMP
"];
   node9 [label="# 0x5e
JUMPDEST
PUSHX Data
PUSHX Data
PUSHX MemData
MLOAD
PUSHX ArithData
ADD
PUSHX Data
MSTORE
PUSHX Data
MSTORE
PUSHX ArithData
ADD
PUSHX Data
PUSHX Data
CODECOPY
PUSHX Data
JUMP
"];
   node10 [label="# 0x83
JUMPDEST
JUMP
"];
   node11 [label="# 0x8a
JUMPDEST
CALLDATASIZE
PUSHX Data
CALLDATACOPY
PUSHX Data
CALLDATASIZE
PUSHX Data
GAS
DELEGATECALL
RETURNDATASIZE
PUSHX Data
RETURNDATACOPY
ISZERO
PUSHX Data
JUMPI
"];
   node12 [label="# 0xa5
RETURNDATASIZE
PUSHX Data
RETURN
"];
   node13 [label="# 0xa9
JUMPDEST
RETURNDATASIZE
PUSHX Data
REVERT
"];
   node14 [label="# 0xae
JUMPDEST
PUSHX Data
PUSHX ArithData
PUSHX BitData
PUSHX BitData
SHL
SUB
AND
EXTCODESIZE
PUSHX Data
JUMPI
"];
   node15 [label="# 0xc0
PUSHX MemData
MLOAD
PUSHX BitData
PUSHX BitData
SHL
MSTORE
PUSHX Data
PUSHX ArithData
ADD
MSTORE
PUSHX Data
PUSHX ArithData
ADD
MSTORE
PUSHX Data
PUSHX ArithData
ADD
MSTORE
PUSHX BitData
PUSHX BitData
SHL
PUSHX ArithData
ADD
MSTORE
PUSHX ArithData
ADD
"];
   node16 [label="# 0x112
JUMPDEST
PUSHX MemData
MLOAD
SUB
REVERT
"];
   node17 [label="# 0x11b
JUMPDEST
PUSHX Data
PUSHX ArithData
PUSHX BitData
PUSHX BitData
SHL
SUB
AND
PUSHX MemData
MLOAD
PUSHX Data
PUSHX Data
JUMP
"];
   node18 [label="# 0x136
JUMPDEST
PUSHX Data
PUSHX MemData
MLOAD
SUB
GAS
DELEGATECALL
RETURNDATASIZE
PUSHX LogicData
EQ
PUSHX Data
JUMPI
"];
   node19 [label="# 0x150
PUSHX MemData
MLOAD
PUSHX BitData
NOT
PUSHX ArithData
RETURNDATASIZE
ADD
AND
ADD
PUSHX Data
MSTORE
RETURNDATASIZE
MSTORE
RETURNDATASIZE
PUSHX Data
PUSHX ArithData
ADD
RETURNDATACOPY
PUSHX Data
JUMP
"];
   node20 [label="# 0x171
JUMPDEST
PUSHX Data
"];
   node21 [label="# 0x176
JUMPDEST
PUSHX Data
PUSHX Data
JUMP
"];
   node22 [label="# 0x186
JUMPDEST
JUMP
"];
   node23 [label="# 0x190
JUMPDEST
PUSHX Data
ISZERO
PUSHX Data
JUMPI
"];
   node24 [label="# 0x199
PUSHX Data
JUMP
"];
   node25 [label="# 0x19f
JUMPDEST
MLOAD
ISZERO
PUSHX Data
JUMPI
"];
   node26 [label="# 0x1a7
MLOAD
PUSHX ArithData
ADD
REVERT
"];
   node27 [label="# 0x1af
JUMPDEST
PUSHX MemData
MLOAD
PUSHX BitData
PUSHX BitData
SHL
MSTORE
PUSHX ArithData
ADD
PUSHX Data
PUSHX Data
JUMP
"];
   node28 [label="# 0x1c9
JUMPDEST
PUSHX Data
MLOAD
PUSHX Data
PUSHX ArithData
ADD
PUSHX Data
JUMP
"];
   node29 [label="# 0x1db
JUMPDEST
ADD
JUMP
"];
   node30 [label="# 0x1e5
JUMPDEST
PUSHX Data
MSTORE
PUSHX Data
MLOAD
PUSHX ArithData
ADD
MSTORE
PUSHX Data
PUSHX ArithData
ADD
PUSHX ArithData
ADD
PUSHX Data
JUMP
"];
   node31 [label="# 0x204
JUMPDEST
PUSHX ArithData
ADD
PUSHX BitData
NOT
AND
ADD
PUSHX ArithData
ADD
JUMP
"];
   node32 [label="# 0x218
JUMPDEST
PUSHX Data
"];
   node33 [label="# 0x21b
JUMPDEST
LT
ISZERO
PUSHX Data
JUMPI
"];
   node34 [label="# 0x224
ADD
MLOAD
ADD
MSTORE
PUSHX ArithData
ADD
PUSHX Data
JUMP
"];
   node35 [label="# 0x233
JUMPDEST
GT
ISZERO
PUSHX Data
JUMPI
"];
   node36 [label="# 0x23c
PUSHX Data
ADD
MSTORE
"];
   node37 [label="# 0x242
JUMPDEST
JUMP
"];
   node38 [label="# 0x248
INVALID
"];
   node39 [label="# 0x249
COINBASE
PUSHX Data
GASPRICE
SHA3
PUSHX Data
PUSHX Data
SHA3
PUSHX Data
PUSHX Data
INVALID
"];
   node40 [label="# 0x27e
CREATE
PUSHX Data
INVALID
"];
   node41 [label="# 0x286
INVALID
"];
   node42 [label="# 0x287
MSTORE8
INVALID
"];
   node43 [label="# 0x289
INVALID
"];
   node44 [label="# 0x28c
INVALID
"];
   node45 [label="# 0x28d
PUSHX Data
CALLER
"];
node1->node4;
node1->node2;
node2->node5;
node4->node5;
node5->node11;
node11->node13;
node11->node12;
}
