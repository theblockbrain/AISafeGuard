/* Generated by GvGen v.1.0 (https://www.github.com/stricaud/gvgen) */

digraph G {
compound=true;
   node1 [label="[anywhere]"];
   node2 [label="# 0x0
PUSHX Data
PUSHX Data
MSTORE
PUSHX LogicData
CALLDATASIZE
LT
PUSHX Data
JUMPI
"];
   node3 [label="# 0xd
PUSHX Data
CALLDATALOAD
PUSHX BitData
SHR
PUSHX LogicData
EQ
PUSHX Data
JUMPI
"];
   node4 [label="# 0x1e
PUSHX LogicData
EQ
PUSHX Data
JUMPI
"];
   node5 [label="# 0x29
PUSHX LogicData
EQ
PUSHX Data
JUMPI
"];
   node6 [label="# 0x34
PUSHX Data
JUMP
"];
   node7 [label="# 0x38
JUMPDEST
CALLDATASIZE
PUSHX Data
JUMPI
"];
   node8 [label="# 0x3e
STOP
"];
   node9 [label="# 0x3f
JUMPDEST
PUSHX Data
PUSHX Data
PUSHX StorData
SLOAD
PUSHX ArithData
PUSHX BitData
PUSHX BitData
SHL
SUB
AND
JUMP
"];
   node10 [label="# 0x54
JUMPDEST
PUSHX Data
JUMP
"];
   node11 [label="# 0x59
JUMPDEST
STOP
"];
   node12 [label="# 0x5b
JUMPDEST
CALLVALUE
ISZERO
PUSHX Data
JUMPI
"];
   node13 [label="# 0x63
PUSHX Data
REVERT
"];
   node14 [label="# 0x67
JUMPDEST
PUSHX StorData
SLOAD
PUSHX ArithData
PUSHX BitData
PUSHX BitData
SHL
SUB
AND
"];
   node15 [label="# 0x75
JUMPDEST
PUSHX MemData
MLOAD
PUSHX ArithData
PUSHX BitData
PUSHX BitData
SHL
SUB
AND
MSTORE
PUSHX ArithData
ADD
PUSHX MemData
MLOAD
SUB
RETURN
"];
   node16 [label="# 0x91
JUMPDEST
CALLVALUE
ISZERO
PUSHX Data
JUMPI
"];
   node17 [label="# 0x99
PUSHX Data
REVERT
"];
   node18 [label="# 0x9d
JUMPDEST
PUSHX Data
PUSHX Data
CALLDATASIZE
PUSHX Data
PUSHX Data
JUMP
"];
   node19 [label="# 0xac
JUMPDEST
PUSHX Data
JUMP
"];
   node20 [label="# 0xb1
JUMPDEST
CALLVALUE
ISZERO
PUSHX Data
JUMPI
"];
   node21 [label="# 0xb9
PUSHX Data
REVERT
"];
   node22 [label="# 0xbd
JUMPDEST
PUSHX StorData
SLOAD
PUSHX Data
PUSHX ArithData
PUSHX BitData
PUSHX BitData
SHL
SUB
AND
JUMP
"];
   node23 [label="# 0xd1
JUMPDEST
CALLDATASIZE
PUSHX Data
CALLDATACOPY
PUSHX Data
CALLDATASIZE
PUSHX Data
GAS
DELEGATECALL
RETURNDATASIZE
PUSHX Data
RETURNDATACOPY
ISZERO
PUSHX Data
JUMPI
"];
   node24 [label="# 0xec
RETURNDATASIZE
PUSHX Data
RETURN
"];
   node25 [label="# 0xf0
JUMPDEST
RETURNDATASIZE
PUSHX Data
REVERT
"];
   node26 [label="# 0xf5
JUMPDEST
PUSHX StorData
SLOAD
PUSHX ArithData
PUSHX BitData
PUSHX BitData
SHL
SUB
AND
CALLER
EQ
PUSHX Data
JUMPI
"];
   node27 [label="# 0x108
PUSHX Data
REVERT
"];
   node28 [label="# 0x10c
JUMPDEST
PUSHX StorData
SLOAD
PUSHX ArithData
PUSHX BitData
PUSHX BitData
SHL
SUB
NOT
AND
PUSHX ArithData
PUSHX BitData
PUSHX BitData
SHL
SUB
AND
OR
SSTORE
JUMP
"];
   node29 [label="# 0x12e
JUMPDEST
PUSHX Data
PUSHX LogicData
SUB
SLT
ISZERO
PUSHX Data
JUMPI
"];
   node30 [label="# 0x13c
PUSHX Data
REVERT
"];
   node31 [label="# 0x140
JUMPDEST
CALLDATALOAD
PUSHX ArithData
PUSHX BitData
PUSHX BitData
SHL
SUB
AND
EQ
PUSHX Data
JUMPI
"];
   node32 [label="# 0x153
PUSHX Data
REVERT
"];
   node33 [label="# 0x157
JUMPDEST
JUMP
"];
   node34 [label="# 0x15e
INVALID
"];
   node35 [label="# 0x15f
LOGX
PUSHX Data
INVALID
"];
   node36 [label="# 0x167
SLT
SHA3
STOP
"];
   node37 [label="# 0x16a
SAR
INVALID
"];
   node38 [label="# 0x16c
INVALID
"];
   node39 [label="# 0x16e
INVALID
"];
   node40 [label="# 0x16f
PUSHX Data
"];
node2->node7;
node2->node3;
node3->node12;
node3->node4;
node4->node16;
node4->node5;
node5->node20;
node5->node6;
node6->node9;
node7->node9;
node7->node8;
node9->node10;
node10->node23;
node12->node14;
node12->node13;
node14->node15;
node16->node18;
node16->node17;
node18->node29;
node20->node22;
node20->node21;
node22->node15;
node23->node25;
node23->node24;
node29->node31;
node29->node30;
node31->node33;
node31->node32;
node33->node1;
}
