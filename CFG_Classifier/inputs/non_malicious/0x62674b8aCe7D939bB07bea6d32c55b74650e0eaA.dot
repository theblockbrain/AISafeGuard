/* Generated by GvGen v.1.0 (https://www.github.com/stricaud/gvgen) */

digraph G {
compound=true;
   node1 [label="[anywhere]"];
   node2 [label="# 0x0
PUSHX Data
PUSHX Data
MSTORE
PUSHX LogicData
CALLDATASIZE
LT
PUSHX Data
JUMPI
"];
   node3 [label="# 0xd
PUSHX Data
CALLDATALOAD
PUSHX BitData
SHR
PUSHX LogicData
EQ
PUSHX Data
JUMPI
"];
   node4 [label="# 0x1e
PUSHX LogicData
EQ
PUSHX Data
JUMPI
"];
   node5 [label="# 0x29
PUSHX LogicData
EQ
PUSHX Data
JUMPI
"];
   node6 [label="# 0x34
JUMPDEST
PUSHX Data
PUSHX Data
PUSHX StorData
SLOAD
PUSHX ArithData
PUSHX BitData
PUSHX BitData
SHL
SUB
AND
JUMP
"];
   node7 [label="# 0x49
JUMPDEST
PUSHX Data
JUMP
"];
   node8 [label="# 0x4e
JUMPDEST
STOP
"];
   node9 [label="# 0x50
JUMPDEST
CALLVALUE
ISZERO
PUSHX Data
JUMPI
"];
   node10 [label="# 0x58
PUSHX Data
REVERT
"];
   node11 [label="# 0x5c
JUMPDEST
PUSHX StorData
SLOAD
PUSHX ArithData
PUSHX BitData
PUSHX BitData
SHL
SUB
AND
"];
   node12 [label="# 0x6a
JUMPDEST
PUSHX MemData
MLOAD
PUSHX ArithData
PUSHX BitData
PUSHX BitData
SHL
SUB
AND
MSTORE
PUSHX ArithData
ADD
PUSHX MemData
MLOAD
SUB
RETURN
"];
   node13 [label="# 0x86
JUMPDEST
CALLVALUE
ISZERO
PUSHX Data
JUMPI
"];
   node14 [label="# 0x8e
PUSHX Data
REVERT
"];
   node15 [label="# 0x92
JUMPDEST
PUSHX Data
PUSHX Data
CALLDATASIZE
PUSHX Data
PUSHX Data
JUMP
"];
   node16 [label="# 0xa1
JUMPDEST
PUSHX Data
JUMP
"];
   node17 [label="# 0xa6
JUMPDEST
CALLVALUE
ISZERO
PUSHX Data
JUMPI
"];
   node18 [label="# 0xae
PUSHX Data
REVERT
"];
   node19 [label="# 0xb2
JUMPDEST
PUSHX StorData
SLOAD
PUSHX Data
PUSHX ArithData
PUSHX BitData
PUSHX BitData
SHL
SUB
AND
JUMP
"];
   node20 [label="# 0xc6
JUMPDEST
CALLDATASIZE
PUSHX Data
CALLDATACOPY
PUSHX Data
CALLDATASIZE
PUSHX Data
GAS
DELEGATECALL
RETURNDATASIZE
PUSHX Data
RETURNDATACOPY
ISZERO
PUSHX Data
JUMPI
"];
   node21 [label="# 0xe1
RETURNDATASIZE
PUSHX Data
RETURN
"];
   node22 [label="# 0xe5
JUMPDEST
RETURNDATASIZE
PUSHX Data
REVERT
"];
   node23 [label="# 0xea
JUMPDEST
PUSHX StorData
SLOAD
PUSHX ArithData
PUSHX BitData
PUSHX BitData
SHL
SUB
AND
CALLER
EQ
PUSHX Data
JUMPI
"];
   node24 [label="# 0xfd
PUSHX Data
REVERT
"];
   node25 [label="# 0x101
JUMPDEST
PUSHX StorData
SLOAD
PUSHX ArithData
PUSHX BitData
PUSHX BitData
SHL
SUB
NOT
AND
PUSHX ArithData
PUSHX BitData
PUSHX BitData
SHL
SUB
AND
OR
SSTORE
JUMP
"];
   node26 [label="# 0x123
JUMPDEST
PUSHX Data
PUSHX LogicData
SUB
SLT
ISZERO
PUSHX Data
JUMPI
"];
   node27 [label="# 0x131
PUSHX Data
REVERT
"];
   node28 [label="# 0x135
JUMPDEST
CALLDATALOAD
PUSHX ArithData
PUSHX BitData
PUSHX BitData
SHL
SUB
AND
EQ
PUSHX Data
JUMPI
"];
   node29 [label="# 0x148
PUSHX Data
REVERT
"];
   node30 [label="# 0x14c
JUMPDEST
JUMP
"];
   node31 [label="# 0x153
INVALID
"];
   node32 [label="# 0x154
LOGX
PUSHX Data
INVALID
"];
   node33 [label="# 0x15c
SLT
SHA3
EXTCODESIZE
INVALID
"];
   node34 [label="# 0x162
INVALID
"];
   node35 [label="# 0x163
PUSHX Data
PUSHX Data
STOP
"];
   node36 [label="# 0x185
ADDMOD
SMOD
STOP
"];
   node37 [label="# 0x188
CALLER
"];
node2->node6;
node2->node3;
node3->node9;
node3->node4;
node4->node13;
node4->node5;
node5->node17;
node5->node6;
node6->node7;
node7->node20;
node9->node11;
node9->node10;
node11->node12;
node13->node15;
node13->node14;
node15->node26;
node17->node19;
node17->node18;
node19->node12;
node20->node22;
node20->node21;
node26->node28;
node26->node27;
node28->node30;
node28->node29;
node30->node1;
}
